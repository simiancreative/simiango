// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	service "github.com/simiancreative/simiango/service"
	mock "github.com/stretchr/testify/mock"
)

// ParamHolder is an autogenerated mock type for the ParamHolder type
type ParamHolder struct {
	mock.Mock
}

// Get provides a mock function with given fields: _a0
func (_m *ParamHolder) Get(_a0 string) (service.ParamItem, bool) {
	ret := _m.Called(_a0)

	var r0 service.ParamItem
	if rf, ok := ret.Get(0).(func(string) service.ParamItem); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Get(0).(service.ParamItem)
	}

	var r1 bool
	if rf, ok := ret.Get(1).(func(string) bool); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Get(1).(bool)
	}

	return r0, r1
}

type mockConstructorTestingTNewParamHolder interface {
	mock.TestingT
	Cleanup(func())
}

// NewParamHolder creates a new instance of ParamHolder. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewParamHolder(t mockConstructorTestingTNewParamHolder) *ParamHolder {
	mock := &ParamHolder{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
