// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// TPL is an autogenerated mock type for the TPL type
type TPL struct {
	mock.Mock
}

// Result provides a mock function with given fields:
func (_m *TPL) Result() (interface{}, error) {
	ret := _m.Called()

	var r0 interface{}
	if rf, ok := ret.Get(0).(func() interface{}); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(interface{})
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewTPL interface {
	mock.TestingT
	Cleanup(func())
}

// NewTPL creates a new instance of TPL. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewTPL(t mockConstructorTestingTNewTPL) *TPL {
	mock := &TPL{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
